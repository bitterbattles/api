AWSTemplateFormatVersion: 2010-09-09
Parameters:
  EnvName:
    Type: String
    Default: dev
  BattlesTableRCUs:
    Type: Number
    Default: 1
  BattlesTableWCUs:
    Type: Number
    Default: 1
  BattlesTableUserIdRCUs:
    Type: Number
    Default: 1
  BattlesTableUserIdWCUs:
    Type: Number
    Default: 1
  VotesTableRCUs:
    Type: Number
    Default: 1
  VotesTableWCUs:
    Type: Number
    Default: 1
  RedisNodeType:
    Type: String
    Default: cache.t2.micro
Conditions:
  IsProd:
    !Equals [!Ref EnvName, "prod"]
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
  Subnet0: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: 10.0.0.0/18
      MapPublicIpOnLaunch: false
  Subnet1: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: 10.0.64.0/18
      MapPublicIpOnLaunch: false
  Subnet2: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [2, !GetAZs ""]
      CidrBlock: 10.0.128.0/18
      MapPublicIpOnLaunch: false
  BattlesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: battles
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref BattlesTableRCUs
        WriteCapacityUnits: !Ref BattlesTableWCUs
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: userId
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: !Ref BattlesTableUserIdRCUs
            WriteCapacityUnits: !Ref BattlesTableUserIdWCUs
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  VotesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: votes
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref VotesTableRCUs
        WriteCapacityUnits: !Ref VotesTableWCUs
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: battleId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: battleId
          KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_IMAGE
  DynamoEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      VpcId: !Ref VPC
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.dynamodb"
  SubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: A group of subnets for redis.
      SubnetIds:
        - !Ref Subnet0
        - !Ref Subnet1
        - !Ref Subnet2
  Redis:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      ReplicationGroupDescription: Multi-AZ redis cluster.
      Engine: redis
      CacheNodeType: !Ref RedisNodeType
      AutomaticFailoverEnabled: true
      NumCacheClusters: 3
      PreferredCacheClusterAZs:
        - !Select [0, !GetAZs ""]
        - !Select [1, !GetAZs ""]
        - !Select [2, !GetAZs ""]
      CacheSubnetGroupName: !Ref SubnetGroup
      SecurityGroupIds:
        - !GetAtt VPC.DefaultSecurityGroup
Outputs:
  Subnet0Id:
    Value: !Ref Subnet0
    Export:
      Name: Subnet0Id
  Subnet1Id:
    Value: !Ref Subnet1
    Export:
      Name: Subnet1Id
  Subnet2Id:
    Value: !Ref Subnet2
    Export:
      Name: Subnet2Id
  SecurityGroupId:
    Value: !GetAtt VPC.DefaultSecurityGroup
    Export:
      Name: SecurityGroupId
  BattlesTableStreamArn:
    Value: !GetAtt BattlesTable.StreamArn
    Export:
      Name: BattlesTableStreamArn
  VotesTableStreamArn:
    Value: !GetAtt VotesTable.StreamArn
    Export:
      Name: VotesTableStreamArn
  RedisAddress:
    Value: !GetAtt Redis.PrimaryEndPoint.Address
    Export:
      Name: RedisAddress